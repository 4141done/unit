
# Copyright (C) Max Romanov
# Copyright (C) Igor Sysoev
# Copyright (C) NGINX, Inc.


shift

for nxt_option; do

    case "$nxt_option" in
        -*=*) value=`echo "$nxt_option" | sed -e 's/[-_a-zA-Z0-9]*=//'`     ;;
           *) value="" ;;
    esac

    case "$nxt_option" in
        --config=*)    NXT_PHP_CONFIG="$value"                               ;;
        --module=*)    NXT_PHP_MODULE="$value"                               ;;
        --lib-path=*)  NXT_PHP_LIB_PATH="$value"                             ;;

        --help)
            cat << END

    --config=FILE         set php-config filename
    --module=NAME         set unit php module name
    --lib-path=DIRECTORY  set directory path to libphp.so library

END
            exit 0
        ;;

        *)
            echo
            echo $0: error: invalid PHP option \"$nxt_option\"
            echo
            exit 1
        ;;

    esac

done


if [ ! -f $NXT_AUTOCONF_DATA ]; then
   echo
   echo Please run common $0 before configuring module \"$nxt_module\".
   echo
   exit 1
fi

. $NXT_AUTOCONF_DATA


NXT_PHP_CONFIG=${NXT_PHP_CONFIG=php-config}
NXT_PHP=${NXT_PHP_CONFIG%-config*}
NXT_PHP_MODULE=${NXT_PHP_MODULE=${NXT_PHP##*/}}
NXT_PHP_LIB_PATH=${NXT_PHP_LIB_PATH=}


$echo "configuring PHP module"
$echo "configuring PHP module ..." >> $NXT_AUTOCONF_ERR

$echo -n "checking for PHP ..."
$echo "checking for PHP ..." >> $NXT_AUTOCONF_ERR

NXT_PHP_LDFLAGS=

if /bin/sh -c "${NXT_PHP_CONFIG} --version"  >> $NXT_AUTOCONF_ERR 2>&1; then

    $echo " found"

    NXT_PHP_VERSION="`${NXT_PHP_CONFIG} --version`"
    $echo " + PHP version: ${NXT_PHP_VERSION}"
    $echo " + PHP SAPI: [`${NXT_PHP_CONFIG} --php-sapis`]"

    NXT_PHP_INCLUDE="`${NXT_PHP_CONFIG} --includes`"
    NXT_PHP_LIB="-lphp${NXT_PHP_VERSION%%.*}"

    if [ "$NXT_PHP_LIB_PATH" != "" ]; then
        # "php-config --ldflags" does not contain path to libphp.
        NXT_PHP_LDFLAGS="-L${NXT_PHP_LIB_PATH} -Wl,-rpath ${NXT_PHP_LIB_PATH}"
    fi

    nxt_feature="PHP embed SAPI"
    nxt_feature_name=NXT_HAVE_PHP
    nxt_feature_run=no
    nxt_feature_incs="${NXT_PHP_INCLUDE}"
    nxt_feature_libs="${NXT_PHP_LIB} ${NXT_PHP_LDFLAGS}"
    nxt_feature_test="
        #include <php.h>
        #include <php_main.h>

        int main() {
            php_request_startup();
            return 0;
        }"

    . auto/feature

    if [ $nxt_found = no ]; then
        $echo
        $echo $0: error: no PHP embed SAPI found.
        $echo
        exit 1;
    fi

else
    $echo
    $echo $0: error: no PHP found.
    $echo
    exit 1;
fi

if grep ^$NXT_PHP_MODULE: $NXT_MAKEFILE 2>&1 > /dev/null; then
    $echo
    $echo $0: error: duplicate \"$NXT_PHP_MODULE\" module configured.
    $echo
    exit 1;
fi

$echo " + PHP module: unit.${NXT_PHP_MODULE}"


$echo >> $NXT_MAKEFILE

NXT_PHP_MODULE_SRCS=" \
    src/nxt_php_sapi.c \
"

# The php module object files.

nxt_objs=

for nxt_src in $NXT_PHP_MODULE_SRCS; do

    nxt_obj=`$echo $nxt_src | sed -e "s/\.c$/-$NXT_PHP_MODULE.o/"`
    nxt_objs="$nxt_objs $NXT_BUILD_DIR/$nxt_obj"

    cat << END >> $NXT_MAKEFILE

$NXT_BUILD_DIR/$nxt_obj:	$nxt_src
	\$(CC) -c \$(CFLAGS) \$(NXT_INCS) $NXT_PHP_INCLUDE \\
	-o $NXT_BUILD_DIR/$nxt_obj $nxt_src
END

done

 
cat << END >> $NXT_MAKEFILE

.PHONY:			${NXT_PHP_MODULE}

all: ${NXT_PHP_MODULE}

${NXT_PHP_MODULE}:	$NXT_BUILD_DIR/unit.${NXT_PHP_MODULE}

$NXT_BUILD_DIR/unit.${NXT_PHP_MODULE}:	$nxt_objs
	$NXT_MODULE_LINK -o $NXT_BUILD_DIR/unit.${NXT_PHP_MODULE} \\
	$nxt_objs ${NXT_PHP_LIB} ${NXT_PHP_LDFLAGS}

END
